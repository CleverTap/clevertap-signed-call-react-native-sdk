require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '14.0'
install! 'cocoapods', :deterministic_uuids => false

source 'https://github.com/CleverTap/podspecs.git'
source 'https://github.com/CocoaPods/Specs.git'

target 'ClevertapSignedCallReactNativeExample' do
  config = use_native_modules!

  use_react_native!(:path => config[:reactNativePath],
                    :hermes_enabled => false,
                    :flipper_configuration => FlipperConfiguration.disabled,
                    # An absolute path to your application root.
                    :app_path => "#{Pod::Config.instance.installation_root}/.."
                    )
  
  target 'ClevertapSignedCallReactNativeExampleTests' do
    inherit! :complete
    # Pods for testing
  end
  
  
  
  use_frameworks!
  pod 'clevertap-signed-call-react-native', :path => '../..'
  pod 'CleverTap-iOS-SDK', '4.2.0', modular_headers: true
  pod 'CleverTap-SignedCall-SDK', '0.0.2'
  
  # use_frameworks! :linkage => :static
    # use_frameworks!
    
    
    post_install do |installer|
      
      installer.pods_project.targets.each do |target|
        target.build_configurations.each do |config|
            config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
        end
      end

      
    installer.target_installation_results.pod_target_installation_results.each do |pod_name, target_installation_result|
    target_installation_result.native_target.build_configurations.each do |config|
    # For third party modules who have React-bridging dependency to search correct headers
    config.build_settings['HEADER_SEARCH_PATHS'] ||= '$(inherited) '
    config.build_settings['HEADER_SEARCH_PATHS'] << '"$(PODS_ROOT)/Headers/Private/React-bridging/react/bridging" '
    config.build_settings['HEADER_SEARCH_PATHS'] << '"$(PODS_CONFIGURATION_BUILD_DIR)/React-bridging/react_bridging.framework/Headers" '
    end
    end
    react_native_post_install(installer)
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
    end

end


